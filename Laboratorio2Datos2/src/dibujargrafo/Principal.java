/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package dibujargrafo;

import java.awt.Color;
import java.awt.image.BufferedImage;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JCheckBox;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author jesusdavide
 */
public class Principal extends javax.swing.JFrame {

    /**
     * Creates new form Principal
     */
    ArrayList<Nodo> lista = new ArrayList();
    ArrayList<Arista> aristas = new ArrayList<>();
    ArrayList<String> esp = new ArrayList<>();
    ArrayList<String> eng = new ArrayList<>();
    ArrayList<String> fr = new ArrayList<>();
    ArrayList<String> port = new ArrayList<>();
    ArrayList<String> ger = new ArrayList<>();
    ArrayList<String> chn = new ArrayList<>();
    BufferedImage iconohombre = Metodos.cargarImagen("icon-man");
    BufferedImage iconomujer = Metodos.cargarImagen("icon-girl");
    BufferedImage hombreSeleccionado = Metodos.cargarImagen("man-selected");
    BufferedImage mujerSeleccionado = Metodos.cargarImagen("girl-selected");
    Nodo seleccionado = null;
    String sexo;
    public static final String[] sexos = {"Masculino", "Femenino"};
    public static final String[] relaciones = {"Amigo", "Padre", "Madre", "Hermano(a)",
        "Primo(a)", "Sobrino(a)", "Abuelo(a)", "Tío(a)"};
    boolean entrar = true;

    /*
    boolean tieneidiomas() {
        return ES.isSelected() || EN.isSelected() || FR.isSelected() || CH.isSelected()
                || GER.isSelected() || PR.isSelected();
    }
    
     */
    void mostraridiomas(String name) {
        JCheckBox ES = new JCheckBox("Español");
        JCheckBox EN = new JCheckBox("Inglés");
        JCheckBox FR = new JCheckBox("Francés");
        JCheckBox GER = new JCheckBox("Alemán");
        JCheckBox PR = new JCheckBox("Portugués");
        JCheckBox CH = new JCheckBox("Mandarín");
        String message = "Seleccione los idiomas que habla ";
        Object[] params = {message, ES, EN, FR, GER, PR, CH};
        int n = JOptionPane.showConfirmDialog(null, params, "Idiomas", JOptionPane.YES_OPTION);
        boolean entra;
        do {
            if (ES.isSelected() || EN.isSelected() || FR.isSelected() || CH.isSelected()
                    || GER.isSelected() || PR.isSelected()) {
                if (ES.isSelected()) 
                    esp.add(name);
                if (EN.isSelected()) 
                    eng.add(name);
                if (FR.isSelected()) 
                    fr.add(name);
                if (CH.isSelected()) 
                    chn.add(name);
                if (GER.isSelected()) 
                    ger.add(name);
                if (PR.isSelected()) 
                    port.add(name);
                entra = false;
            } else {
                JOptionPane.showMessageDialog(null, "Debe ingresar al menos un idioma");
                n = JOptionPane.showConfirmDialog(null, params, "Idiomas", JOptionPane.YES_OPTION);
                entra = true;
            }
        } while (entra);
        System.out.println(" "+esp);
    }

    public Principal() throws IOException {
        initComponents();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBounds(new java.awt.Rectangle(0, 0, 1024, 768));

        panel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        panel.setPreferredSize(new java.awt.Dimension(800, 580));
        panel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                panelMouseReleased(evt);
            }
        });
        panel.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                panelComponentShown(evt);
            }
        });
        panel.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                panelPropertyChange(evt);
            }
        });

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/mapa.png"))); // NOI18N

        javax.swing.GroupLayout panelLayout = new javax.swing.GroupLayout(panel);
        panel.setLayout(panelLayout);
        panelLayout.setHorizontalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        panelLayout.setVerticalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(19, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    private void panelMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panelMouseReleased
        JFrame frame = new JFrame("El necesario");
        int d = 50, r = d / 2;
        int x = evt.getX();
        int y = evt.getY();
        int ancho = panel.getWidth(), alto = panel.getHeight();
        if (seleccionado == null) {
            seleccionado = Metodos.seleccionar(x, y, d, lista);
            if (seleccionado != null) {
                if (seleccionado.isIsman()) {
                    Metodos.dibujarIcono(hombreSeleccionado, seleccionado.getX(),
                            seleccionado.getY(), panel);
                } else {
                    Metodos.dibujarIcono(mujerSeleccionado, seleccionado.getX(),
                            seleccionado.getY(), panel);
                }
            } else {
                String nombre = JOptionPane.showInputDialog("Ingrese su nombre: ");
                String sexo = (String) JOptionPane.showInputDialog(frame,
                        "Por favor seleccione su sexo",
                        "Seleccione su sexo",
                        JOptionPane.QUESTION_MESSAGE,
                        null,
                        sexos,
                        sexos[0]);
                do {
                    if (nombre.isEmpty()) {
                        JOptionPane.showMessageDialog(null, "Error, no puede dejar la casilla vacía");
                        nombre = JOptionPane.showInputDialog("Ingrese su nombre: ");
                        entrar = true;
                    } else {
                        mostraridiomas(nombre);
                        if (Metodos.sePuedeDibujar(x, y, r, ancho, alto)) {
                            if (!Metodos.colisiona(x, y, d, lista)) {
                                if (sexo.equals("Masculino")) {
                                    Metodos.dibujarIcono(iconohombre, x, y, panel, nombre);
                                    lista.add(new Nodo(x, y, d, nombre, true));
                                } else {
                                    Metodos.dibujarIcono(iconomujer, x, y, panel, nombre);
                                    lista.add(new Nodo(x, y, d, nombre, false));
                                }
                            }
                        }
                        entrar = false;
                    }
                } while (entrar);

            }
        } else {
            Nodo destino = Metodos.seleccionar(x, y, d, lista);
            if (destino != null) {
                String relacion = (String) JOptionPane.showInputDialog(frame,
                        "¿Qué relación tiene con la persona " + destino.getNombre(),
                        "Relaciones",
                        JOptionPane.QUESTION_MESSAGE,
                        null,
                        relaciones,
                        relaciones[0]);
                Metodos.dibujarLinea(seleccionado.getX(), seleccionado.getY(),
                        destino.getX(), destino.getY(), panel);
                if (destino.isIsman()) {
                    Metodos.dibujarIcono(iconohombre, destino.getX(), destino.getY(), panel);
                } else {
                    Metodos.dibujarIcono(iconomujer, destino.getX(), destino.getY(), panel);
                }
                aristas.add(new Arista(seleccionado.getNombre(), destino.getNombre(), relacion));
            }
            if (seleccionado.isIsman()) {
                Metodos.dibujarIcono(iconohombre, seleccionado.getX(), seleccionado.getY(), panel);
            } else {
                Metodos.dibujarIcono(iconomujer, seleccionado.getX(), seleccionado.getY(), panel);
            }
            seleccionado = null;
        }
    }//GEN-LAST:event_panelMouseReleased

    private void panelComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_panelComponentShown

    }//GEN-LAST:event_panelComponentShown

    private void panelPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_panelPropertyChange

    }//GEN-LAST:event_panelPropertyChange

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new Principal().setVisible(true);

                } catch (IOException ex) {
                    Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel panel;
    // End of variables declaration//GEN-END:variables
}
